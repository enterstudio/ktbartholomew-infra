- name: ensure /etc/tls
  file:
    dest: /etc/tls
    state: directory
  become: yes

- name: create client cert directory
  file:
    dest: certs/master
    state: directory
  delegate_to: localhost

- name: create client cert
  shell: |
    openssl genrsa -out certs/master/apiserver-key.pem 2048

    openssl req \
    -new -key certs/master/apiserver-key.pem \
    -out certs/master/apiserver.csr \
    -subj "/CN=apiserver"

    sh -c "echo '[req]
    req_extensions = v3_req
    distinguished_name = req_distinguished_name
    [req_distinguished_name]
    [ v3_req ]
    basicConstraints = CA:FALSE
    keyUsage = nonRepudiation, digitalSignature, keyEncipherment
    subjectAltName = @alt_names
    [alt_names]
    DNS.1 = kubernetes.default.svc.cluster.local
    IP.1 = {{ kubernetes.master_host }}
    IP.2 = 10.32.0.1'" > certs/master/extfile.cnf

    openssl x509 \
    -req -in certs/master/apiserver.csr \
    -CA certs/ca/ca.pem \
    -CAkey certs/ca/ca-key.pem \
    -CAcreateserial \
    -out certs/master/apiserver.pem \
    -days 10000 \
    -extensions v3_req\
    -extfile certs/master/extfile.cnf

    rm certs/master/extfile.cnf
    rm certs/master/apiserver.csr
  args:
    creates: certs/master/apiserver.pem
  delegate_to: localhost

- name: copy apiserver cert
  copy:
    src: certs/master/apiserver.pem
    dest: /etc/tls/apiserver.pem
  become: yes

- name: copy apiserver key
  copy:
    src: certs/master/apiserver-key.pem
    dest: /etc/tls/apiserver-key.pem
  become: yes
