# - name: create /tmp/etcd-{{ etcd_version }}
#   file:
#     dest: "/tmp/etcd-{{ etcd_version }}"
#     state: directory
#   tags:
#     - install
#
# - name: download etcd binary
#   unarchive:
#     src: "{{ etcd.download_url }}"
#     dest: "{{ etcd.download_dest }}"
#     remote_src: yes
#     creates: "{{ etcd.download_dest }}/etcd-v{{ etcd_version }}-linux-amd64"
#   notify:
#     - etcd-install-bin
#   tags:
#     - install
#
# - name: install etcd binaries
#   shell: |
#     cp {{ etcd.download_dest }}/etcd-v{{ etcd_version }}-linux-amd64/etcd* /usr/bin/
#   args:
#     creates: /usr/bin/etcd
#   become: yes
#
# - name: create {{ etcd.data_dir }}
#   file:
#     dest: "{{ etcd.data_dir }}"
#     state: directory
#   become: yes
#   tags:
#     - install

- name: create /tmp/docker-{{ docker_version }}
  file:
    dest: "/tmp/docker-{{ docker_version }}"
    state: directory
  tags:
    - install

- name: download docker binaries
  unarchive:
    src: https://get.docker.com/builds/Linux/x86_64/docker-{{ docker_version }}.tgz
    dest: /tmp/docker-{{ docker_version }}
    remote_src: yes
    creates: /tmp/docker-{{ docker_version }}/docker
  notify:
    - install docker binaries

- name: install docker binaries
  shell: |
    cp /tmp/docker-{{ docker_version }}/docker/docker* /usr/bin/
  args:
    creates: /usr/bin/dockerd
  become: yes

- name: template /etc/systemd/system/docker.service
  template:
    src: docker.service.j2
    dest: /etc/systemd/system/docker.service
  become: yes
  notify:
    - restart docker

- name: enable/start docker.service
  service:
    name: docker
    enabled: yes
    state: started
  become: yes
