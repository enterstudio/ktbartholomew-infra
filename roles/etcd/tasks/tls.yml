- name: ensure /etc/tls
  file:
    dest: /etc/tls
    state: directory
  become: yes

- name: create client cert
  shell: |
    openssl genrsa -out certs/etcd/etcd-client-key.pem 2048

    openssl req \
    -new -key certs/etcd/etcd-client-key.pem \
    -out certs/etcd/etcd-client.csr \
    -subj "/CN=etcd-client"

    sh -c "echo '[req]
    req_extensions = v3_req
    distinguished_name = req_distinguished_name
    [req_distinguished_name]
    [ v3_req ]
    basicConstraints = CA:FALSE
    keyUsage = nonRepudiation, digitalSignature, keyEncipherment
    subjectAltName = @alt_names
    [alt_names]
    IP.1 = {{ etcd.advertise_url }}'" > certs/etcd/extfile.cnf

    openssl x509 \
    -req -in certs/etcd/etcd-client.csr \
    -CA certs/ca/ca.pem \
    -CAkey certs/ca/ca-key.pem \
    -CAcreateserial \
    -out certs/etcd/etcd-client.pem \
    -days 10000 \
    -extensions v3_req\
    -extfile certs/etcd/extfile.cnf

    rm certs/etcd/extfile.cnf
    rm certs/etcd/etcd-client.csr
  args:
    creates: certs/etcd/etcd-client.pem
  delegate_to: localhost

- name: copy CA cert
  copy:
    src: certs/ca/ca.pem
    dest: /etc/tls/ca.pem
  become: yes
  notify:
    - etcd-reload-restart

- name: copy client cert
  copy:
    src: certs/etcd/etcd-client.pem
    dest: /etc/tls/etcd-client.pem
  become: yes
  notify:
    - etcd-reload-restart

- name: copy client key
  copy:
    src: certs/etcd/etcd-client-key.pem
    dest: /etc/tls/etcd-client-key.pem
  become: yes
  notify:
    - etcd-reload-restart
